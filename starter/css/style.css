@keyframes moveInLeft {
  0% {
    transform: translateX(-10rem); }
  80% {
    transform: translateX(2rem); }
  100% {
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    transform: translateX(10rem); }
  80% {
    transform: translateX(-2rem); }
  100% {
    transform: translateX(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%;
  /* 1rem = 10px. This defined what 1rem is */ }

body {
  box-sizing: border-box;
  /* The box-sizing property defines how the width and height of an element are calculated: should they include padding and borders, or not. */ }

body {
  font-family: "Lato", san-serif;
  /* anything about font we set them up in the body not above */
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
  /* The box-sizing property defines how the width and height of an element are calculated: should they include padding and borders, or not. */ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; }
  .heading-primary-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.7rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  /* background-image: linear-gradient(to-right, color-primary-light-least, $color-primary);
        background-clip: text;
        color: transparent; */
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(2deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-bottom-meddium {
  margin-bottom: 4rem; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  /* there will be possible animation, and transform tells how the transition would be */
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-o 0.3rem);
  /* for Y, if it's up, then it's negative */
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.719); }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 5px 10px rgba(250, 248, 248, 0.5); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff; }

.btn-next:link, .btn-next:visited {
  font-size: 1.6rem;
  color: #fff;
  display: inline-block;
  text-decoration: none;
  padding: .3rem;
  transition: all .2s;
  background-color: #582A72;
  border-radius: 30%; }

.btn-next:hover {
  color: #fff;
  box-shadow: 0 0.1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-next:active {
  box-shadow: 0 0.1rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 5px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #9775AA;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(151, 117, 170, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.7);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    /* background-image: linear-gradient(to-right, $color-primary-light, $color-primary-dark);
        background-clip: text;
        color: transparent; */ }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative; }
  .card__side {
    background-color: #D8BFD8;
    height: 50rem;
    transition: all .58 ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 3px;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #D8BFD8; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-color: linear-gradient(to right bottom, #9775AA, #764B8E); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%); }
    .card__picture--1 {
      background-image: url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: url(../img/nat-5.jpg); }
    .card__picture--3 {
      background-image: url(../img/nat-5.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    top: 12rem;
    right: 2rem; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    /* /&--1 {
            //background-image: linear-gradient()
        }/card__heading-span */ }

.section-about {
  background-color: rgba(127, 127, 127, 0.1);
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  top: -2rem;
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(118, 75, 142, 0.5), rgba(61, 18, 85, 0.5)), url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-5deg);
  margin-top: -6rem; }
  .section-features > * {
    transform: skewY(5deg); }

.section-tours {
  background-color: rgba(127, 127, 127, 0.1);
  padding: 25rem 0;
  margin-top: -6rem; }

.header {
  height: 95vh;
  background-image: url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%);
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 5rem;
    left: 5rem; }
  .header__logo {
    height: 3.5rem; }
  .header__main-box {
    position: absolute;
    top: 55%;
    left: 40%;
    transform: translate(-50%, -50%);
    text-align: center;
    /* to center the link inside simple in this way */ }
  .header__logo-box {
    position: absolute;
    top: 5rem;
    left: 5rem; }
  .header__logo {
    height: 3.5rem; }
  .header__main-box {
    position: absolute;
    top: 55%;
    left: 40%;
    transform: translate(-50%, -50%);
    text-align: center;
    /* to center the link inside simple in this way */ }

.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 2rem; }
  .row .col-1-of-2 {
    width: calc((100% - 2rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 2rem) / 3); }
  .row .col-2-of-3 {
    width: calc(2 * ((100% - 2 * 2rem) / 3) + 2rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 2rem) / 4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 2rem) / 4) + 2rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 2rem) / 4) + 2 * 2rem); }
